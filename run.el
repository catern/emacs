(defun getfd (proc fd)
  (let ((path (file-name-concat "/proc" (number-to-string (process-id proc)) "fd" (number-to-string fd))))
    (message "%s %s %s" (process-name proc) path (file-symlink-p path))))
  
(let* ((process-connection-type nil)
       (cat1 (make-process :name "cat" :buffer nil :command '("cat")))
       (cat2 (make-process :name "cat" :command '("cat") :filter (apply-partially #'message "%s %s") :input cat1)))
  (process-send-string cat1 "foobar")
  (getfd cat1 0)
  (getfd cat1 1)
  (getfd cat1 2)
  (getfd cat2 0)
  (getfd cat2 1)
  (getfd cat2 2)
  (set-binary-mode 'stdout nil)
  (sit-for 10000))
